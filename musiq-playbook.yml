---
- name: Build and manage Docker container
  hosts: localhost
  gather_facts: false
  
  vars:
    musiq_dir: "{{ lookup('env', 'MUSIQ_DIR') | default('/path/to/musiq') }}"
    container_dir: "{{ lookup('env', 'CONTAINER_DIR') | default('/path/to/container') }}"
    app_dir: "{{ lookup('env', 'APP_DIR') | default('/path/to/app') }}"
    resources_dir: "{{ lookup('env', 'RESOURCES_DIR') | default('/path/to/resources') }}"
    dockerfile_path: "{{ container_dir }}/Dockerfile"
    tar_file_path: "{{ container_dir }}/image.tar"
    image_name: "{{ lookup('env', 'IMAGE_NAME') | default('python:3.12-alpine') }}"
    container_name: "{{ lookup('env', 'CONTAINER_NAME') | default('python-app') }}"
    venv_name: "{{ lookup('env', 'VENV_NAME') | default('python-env') }}"

  tasks:
    - name: Ensure container directory exists
      ansible.builtin.file:
        path: "{{ container_dir }}"
        state: directory
        mode: '0755'

    - name: Create Dockerfile for Python dependencies
      ansible.builtin.copy:
        dest: "{{ dockerfile_path }}"
        mode: '0644'
        content: |
          FROM "{{ image_name }}"
          WORKDIR /home/app
          
          VOLUME ["/home/app", "/home/resources"]
          
          RUN apk update && \
              apk add --no-cache \
                gcc \
                bash \
                musl-dev \
                libffi-dev \
                openssl-dev \
                python3-dev \
                py3-pip && \
              python3 -m pip install --upgrade pip && \
              python3 -m pip install flask requests ytmusicapi && \
              apk del gcc musl-dev libffi-dev openssl-dev python3-dev
          
          ENTRYPOINT ["sh", "-c"]
          CMD ["while true; do sleep 30; done"]

    - name: Build Docker image
      ansible.builtin.command:
        cmd: docker build -t "{{ container_name }}" "{{ container_dir }}"

    - name: Run container
      ansible.builtin.command:
        cmd: >
          docker run -d 
          --name "{{ container_name }}"
          -v "{{ app_dir }}:/home/app" 
          -v "{{ resources_dir }}:/home/resources"
          -w /home/app 
          "{{ container_name }}"
